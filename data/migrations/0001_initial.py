# Generated by Django 4.2.3 on 2023-07-24 14:41

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('time_internal', models.DateTimeField(primary_key=True, serialize=False)),
                ('count', models.IntegerField()),
                ('dest_wallet_id', models.BigIntegerField()),
                ('transaction_type', models.IntegerField()),
                ('transaction_type_chain', models.CharField(max_length=128)),
                ('wallet_nickname', models.CharField(blank=True, max_length=16, null=True)),
                ('transaction_cost', models.BigIntegerField()),
                ('transaction_value', models.BigIntegerField()),
                ('bank_id', models.IntegerField()),
                ('transaction_gateway_id', models.CharField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='DatasetBackup1',
            fields=[
                ('time_internal', models.DateTimeField(default=None, primary_key=True, serialize=False)),
                ('count', models.IntegerField()),
                ('dest_wallet_id', models.BigIntegerField()),
                ('transaction_type', models.IntegerField()),
                ('wallet_nickname', models.CharField(blank=True, max_length=16, null=True)),
                ('transaction_cost', models.BigIntegerField()),
                ('transaction_value', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DatasetBackup2',
            fields=[
                ('time_internal', models.DateTimeField(default=None, primary_key=True, serialize=False)),
                ('count', models.IntegerField(default=None)),
                ('dest_wallet_id', models.BigIntegerField()),
                ('transaction_type', models.IntegerField()),
                ('wallet_nickname', models.CharField(blank=True, max_length=16, null=True)),
                ('transaction_cost', models.BigIntegerField()),
                ('transaction_value', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DatasetGenerate',
            fields=[
                ('time_internal', models.DateTimeField(default=django.utils.timezone.now, editable=False, primary_key=True, serialize=False)),
                ('count', models.IntegerField()),
                ('dest_wallet_id', models.BigIntegerField()),
                ('transaction_type', models.IntegerField()),
                ('transaction_type_chain', models.CharField(max_length=128)),
                ('wallet_nickname', models.CharField(blank=True, max_length=16, null=True)),
                ('transaction_cost', models.BigIntegerField()),
                ('transaction_value', models.BigIntegerField()),
                ('bank_id', models.IntegerField()),
                ('transaction_gateway_id', models.CharField(max_length=8)),
            ],
        ),
        migrations.RunSQL(
            "CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;"
            "ALTER TABLE data_dataset DROP CONSTRAINT data_dataset_pkey;"
            "ALTER TABLE data_datasetgenerate DROP CONSTRAINT data_datasetgenerate_pkey;"
            "ALTER TABLE data_datasetbackup1 DROP CONSTRAINT data_datasetbackup1_pkey;"
            "ALTER TABLE data_datasetbackup2 DROP CONSTRAINT data_datasetbackup2_pkey;"
        ),
        migrations.RunSQL(
            "SELECT create_hypertable('data_datasetgenerate', 'time_internal', chunk_time_interval => INTERVAL '1 hours');"
            "SELECT create_hypertable('data_datasetbackup1', 'time_internal', chunk_time_interval => INTERVAL '6 hours');"
            "SELECT create_hypertable('data_datasetbackup2', 'time_internal', chunk_time_interval => INTERVAL '24 hours');"

            "SELECT add_retention_policy('data_datasetgenerate', drop_after => INTERVAL '6 hours');"
            "SELECT add_retention_policy('data_datasetbackup1', drop_after => INTERVAL '2 days');"
            "SELECT add_retention_policy('data_datasetbackup2', drop_after => INTERVAL '7 days');"
        ),
    ]

